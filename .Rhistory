legend.position = "none")
png(paste("diff_figs/","tc-o.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(chi.oth.tts.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","tc-o.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(chi.oth.tts.rand_and_tt.2)
dev.off()
# OTH-CHI transitions per minute
oth.chi.tts.rand_and_tt.1 <- ggplot(turn.transitions.rand,
aes(x = age_mo_round, y = n.o_c.tpm)) +
geom_boxplot(aes(group = age_mo_round), color = "black", fill = "gray50", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "black", color = "black", method = "lm") +
ylab("OTH-CHI tts/min") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
oth.chi.tts.rand_and_tt.2 <- ggplot(turn.transitions.tt,
aes(x = age_mo_round, y = n.o_c.tpm)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "black", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("OTH-CHI tts/min") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","o-tc.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(oth.chi.tts.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","o-tc.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(oth.chi.tts.rand_and_tt.2)
dev.off()
# Graph the basic sequence duration info
# plot per-clip averages so it's consistent with the rest
turn.sequences.rand_and_tt.byclip <- turn.sequences.rand_and_tt %>%
group_by(aclew_child_id, age_mo_round, sample, segment) %>%
summarise(m.seqdur.sec = mean(seq.dur*60))
seq.dur.rand_and_tt.1 <- ggplot(subset(turn.sequences.rand_and_tt.byclip, sample == "random"),
aes(x = age_mo_round, y = m.seqdur.sec)) +
geom_boxplot(aes(group = age_mo_round), color = "black", fill = "gray50", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "black", color = "black", method = "lm") +
ylab("Seq. dur. (sec)") + xlab("")	+
scale_y_continuous(limits=c(0,60),
breaks=seq(0,60,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,60),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
seq.dur.rand_and_tt.2 <- ggplot(subset(turn.sequences.rand_and_tt.byclip, sample != "random"),
aes(x = age_mo_round, y = m.seqdur.sec)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "black", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("Seq. dur. (sec)") + xlab("")	+
scale_y_continuous(limits=c(0,60),
breaks=seq(0,60,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,60),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","seqdur.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","seqdur.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.2)
dev.off()
## Vocal maturity
# all vocalization types
chi.vm.lx.utts <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val)) %>%
mutate(voc.rating = ifelse(val == "M", 4,
ifelse((val == "1" | val == "W"), 3,
ifelse((val == "0" | val == "C"), 2,
ifelse(val == "N", 1, 0))))) %>%
filter(voc.rating > 0) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 4),
max_voc.rtg = c(rep(1, length(ptcp.info$aclew_child_id)), rep(2, length(ptcp.info$aclew_child_id)),
rep(3, length(ptcp.info$aclew_child_id)), rep(4, length(ptcp.info$aclew_child_id)))
)
chi.nvocs <- chi.vm.lx.utts %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props <- chi.vm.lx.utts %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
# speech-like vs. non-speech-like only, only under 19mo
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val) & age_mo_round < 19) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
left_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
left_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
left_join(ptcp.info, by = "aclew_child_id")
chi.vm.lx.voc.type.props <- chi.vm.lx.voc.type.props %>%
mutate(voc.type = factor(as.factor(max_voc.rtg), labels = c("NCB", "CB", "SW", "MW")))
voc.mat.by.age.1 <- ggplot(
data = subset(chi.vm.lx.voc.type.props, voc.type == "NCB"),
aes(x = age_mo_round, y = prop_voc.type)) +
geom_point(color = "red") +
geom_smooth(color = "red", fill = "red", method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
voc.mat.by.age.2 <- ggplot(
data = subset(chi.vm.lx.voc.type.props, voc.type == "CB"),
aes(x = age_mo_round, y = prop_voc.type)) +
geom_point(color = "orange") +
geom_smooth(color = "orange", fill = "orange", method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
voc.mat.by.age.3 <- ggplot(
data = subset(chi.vm.lx.voc.type.props, voc.type == "SW"),
aes(x = age_mo_round, y = prop_voc.type)) +
geom_point(color = "green") +
geom_smooth(color = "green", fill = "green", method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
voc.mat.by.age.4 <- ggplot(
data = subset(chi.vm.lx.voc.type.props, voc.type == "MW"),
aes(x = age_mo_round, y = prop_voc.type)) +
geom_point(color = "blue") +
geom_smooth(color = "blue", fill = "blue", method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","vocmat.1.png", sep=""),
width=600, height=400,units="px", bg = "transparent")
print(voc.mat.by.age.1)
dev.off()
png(paste("diff_figs/","vocmat.2.png", sep=""),
width=600, height=400,units="px", bg = "transparent")
print(voc.mat.by.age.2)
dev.off()
png(paste("diff_figs/","vocmat.3.png", sep=""),
width=600, height=400,units="px", bg = "transparent")
print(voc.mat.by.age.3)
dev.off()
png(paste("diff_figs/","vocmat.4.png", sep=""),
width=600, height=400,units="px", bg = "transparent")
print(voc.mat.by.age.4)
dev.off()
odsmph.segments.rand_and_tt.2 <- ggplot(quantity.nonrand.tt,
aes(x = age_mo_round, y = ods_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "red", color = "red",
outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("ODS (min/hr)") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,80),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","ods.1.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(odsmph.segments.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","ods.2.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(odsmph.segments.rand_and_tt.2)
dev.off()
seq.dur.rand_and_tt.2 <- ggplot(subset(turn.sequences.rand_and_tt.byclip, sample != "random"),
aes(x = age_mo_round, y = m.seqdur.sec)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "pink", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("Seq. dur. (sec)") + xlab("")	+
scale_y_continuous(limits=c(0,60),
breaks=seq(0,60,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,60),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","seqdur.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","seqdur.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.2)
dev.off()
odsmph.segments.rand_and_tt.2 <- ggplot(quantity.nonrand.tt,
aes(x = age_mo_round, y = ods_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "pink", color = "red",
outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("ODS (min/hr)") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,80),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","ods.1.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(odsmph.segments.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","ods.2.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(odsmph.segments.rand_and_tt.2)
dev.off()
tdsmph.segments.rand_and_tt.zoomedin.2 <- ggplot(quantity.nonrand.tt,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "pink", color = "red",
outlier.shape = NA,
lty = "solid", alpha = 0.4) +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("TCDS (min/hr)") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,40),
breaks=seq(0,40,10)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,40),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","tcds.1.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(tdsmph.segments.rand_and_tt.zoomedin.1)
dev.off()
png(paste("diff_figs/","tcds.2.png", sep=""),
width=500, height=400,units="px", bg = "transparent")
print(tdsmph.segments.rand_and_tt.zoomedin.2)
dev.off()
chi.oth.tts.rand_and_tt.2 <- ggplot(turn.transitions.tt,
aes(x = age_mo_round, y = n.c_o.tpm)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "pink", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("CHI-OTH tts/min") + xlab("")	+
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","tc-o.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(chi.oth.tts.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","tc-o.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(chi.oth.tts.rand_and_tt.2)
dev.off()
oth.chi.tts.rand_and_tt.2 <- ggplot(turn.transitions.tt,
aes(x = age_mo_round, y = n.o_c.tpm)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "pink", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("OTH-CHI tts/min") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","o-tc.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(oth.chi.tts.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","o-tc.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(oth.chi.tts.rand_and_tt.2)
dev.off()
seq.dur.rand_and_tt.2 <- ggplot(subset(turn.sequences.rand_and_tt.byclip, sample != "random"),
aes(x = age_mo_round, y = m.seqdur.sec)) +
geom_boxplot(aes(group = age_mo_round), color = "red", fill = "pink", outlier.shape = NA,
lty = "solid") +
geom_smooth(fill = "red", color = "red", method = "lm") +
ylab("Seq. dur. (sec)") + xlab("")	+
scale_y_continuous(limits=c(0,60),
breaks=seq(0,60,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,60),xlim=c(0,38)) +
theme_apa() +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(color="black"),
axis.title.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
strip.text = element_text(color="black"),
axis.ticks = element_line(color = "black"),
axis.line = element_line(color="black", size = 0.4),
legend.position = "none")
png(paste("diff_figs/","seqdur.1.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.1)
dev.off()
png(paste("diff_figs/","seqdur.2.png", sep=""),
width=450, height=400,units="px", bg = "transparent")
print(seq.dur.rand_and_tt.2)
dev.off()
