geom_point(data = comparison.data,
aes(x = AgeMonths, y = xds_mph, group = as.factor(Site), shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) + # unclear why i need three here...
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
View(comparison.data)
ggplot(quantity.rand,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_smooth(method = "lm", color = "black") +
ylab("TCDS (min/hr)") + xlab("")	+
scale_y_continuous(limits=c(0,85),
breaks=seq(0,85,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,85),xlim=c(0,38)) +
geom_point(data = comparison.data,
aes(x = AgeMonths, y = tds_mph, group = as.factor(Site), shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
ggplot(quantity.rand,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_smooth(method = "lm", color = "black") +
ylab("TCDS (min/hr)") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,40),
breaks=seq(0,40,10)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,40),xlim=c(0,38)) +
geom_point(data = comparison.data,
aes(x = AgeMonths, y = tds_mph, group = as.factor(Site), shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
ggplot(quantity.rand,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_smooth(method = "lm", color = "black") +
ylab("TCDS (min/hr)") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,10)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
geom_point(data = comparison.data,
aes(x = AgeMonths, y = tds_mph, group = as.factor(Site), shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
ggplot(quantity.rand,
aes(x = age_mo_round, y = prop_tds)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_smooth(method = "lm", color = "black") +
ylab("TCDS/XDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1),xlim=c(0,38)) +
geom_point(data = comparison.data,
aes(x = AgeMonths, y = prp_tds, group = as.factor(Site), shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
ggplot(quantity.rand.sa,
aes(x = age_mo_round, y = prop_sa.tds,
group = SpkrAge, fill = SpkrAge, color = SpkrAge)) +
geom_boxplot(aes(group = interaction(age_mo_round, SpkrAge),
fill = SpkrAge, color = SpkrAge),
position = position_dodge(1), alpha = 0.3) +
geom_smooth(method = "lm") +
ylab("Prop of TCDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
geom_point(data = comparison.data,
aes(x = AgeMonths, y = prp_tds, group = SpkrAge,
fill = SpkrAge, shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
col.sample.bu3 +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
ggplot(quantity.rand.sa,
aes(x = age_mo_round, y = prop_sa.tds,
group = SpkrAge, fill = SpkrAge, color = SpkrAge)) +
geom_boxplot(aes(group = interaction(age_mo_round, SpkrAge),
fill = SpkrAge, color = SpkrAge),
position = position_dodge(1), alpha = 0.3) +
geom_smooth(method = "lm") +
ylab("Prop of TCDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38))
ggplot(quantity.rand.sa,
aes(x = age_mo_round, y = prop_sa.tds,
group = SpkrAge, fill = SpkrAge, color = SpkrAge)) +
geom_boxplot(aes(group = interaction(age_mo_round, SpkrAge),
fill = SpkrAge, color = SpkrAge),
position = position_dodge(1), alpha = 0.3) +
geom_smooth(method = "lm") +
ylab("Prop of TCDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
geom_point(data = comparison.data.sa,
aes(x = AgeMonths, y = prp_tds, group = SpkrAge,
fill = SpkrAge, shape = as.factor(Site))) +
scale_shape_manual(values=unique(comparison.data$shape)) +
col.sample.bu3 +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
unique(comparison.data$shape)
subset(comparison.data, Type == "Urban")$shape
subset(comparison.data, Type != "Urban")$shape
View(comparison.data)
levels(comparison.data$xds_mph)
levels(comparison.data$Site)
levels(as.factor(comparison.data$Site))
comparison.data$Site <- as.factor(comparison.data$Site)
levels(comparison.data$Site)
unique(comparison.data$shape)
comparison.data$Site <- as.factor(comparison.data$Site, levels = unique(comparison.data$Site))
unique(comparison.data$Site)
comparison.data$Site <- factor(comparison.data$Site, levels = unique(comparison.data$Site))
levels(comparison.data$Site)
comparison.data.shapes <- unique(comparison.data$shape)
comparison.data.shapes
comparison.data <- read_csv(comparison.file)
tds.mph.tofill <- which(is.na(comparison.data$tds_mph) & !(is.na(comparison.data$tds_uph)))
comparison.data$tds_mph[tds.mph.tofill] <- ((comparison.data$tds_uph[tds.mph.tofill] *
avg.utt.len.tseltal$median.utt.len)/60000)
ods.mph.tofill <- which(is.na(comparison.data$ods_mph) & !(is.na(comparison.data$ods_uph)))
comparison.data$ods_mph[ods.mph.tofill] <- ((comparison.data$ods_uph[ods.mph.tofill] *
avg.utt.len.tseltal$median.utt.len)/60000)
xds.mph.tofill <- which(is.na(comparison.data$xds_mph) &
!(is.na(comparison.data$ods_mph)) & !(is.na(comparison.data$tds_mph)))
comparison.data$xds_mph[xds.mph.tofill] <- comparison.data$ods_mph[xds.mph.tofill] +
comparison.data$tds_mph[xds.mph.tofill]
comparison.data.sa <- bind_rows(comparison.data, comparison.data)
comparison.data.sa$SpkrAge <- c(rep("Child", nrow(comparison.data)),
rep("Adult", nrow(comparison.data)))
comparison.data.sa$prp_spkr <- NA
for (i in 1:nrow(comparison.data.sa)) {
if (!(is.na(comparison.data.sa$prp_tds_adu[i]))) {
comparison.data.sa$prp_spkr[i] <- ifelse(comparison.data.sa$SpkrAge[i] == "Child",
comparison.data.sa$prp_tds_chi[i]/100,
comparison.data.sa$prp_tds_adu[i]/100)
}
}
comparison.data$Site <- factor(comparison.data$Site, levels = unique(comparison.data$Site))
comparison.data.shapes <- unique(comparison.data$shape)
comparison.data.shapes
View(comparison.data)
View(comparison.data.sa)
ggplot(quantity.rand.sa,
aes(x = age_mo_round, y = prop_sa.tds,
group = SpkrAge, fill = SpkrAge, color = SpkrAge)) +
geom_boxplot(aes(group = interaction(age_mo_round, SpkrAge),
fill = SpkrAge, color = SpkrAge),
position = position_dodge(1), alpha = 0.3) +
geom_smooth(method = "lm") +
ylab("Prop of TCDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
geom_point(data = comparison.data.sa,
aes(x = AgeMonths, y = prp_spkr, group = SpkrAge,
fill = SpkrAge, shape = Site)) +
scale_shape_manual(values=comparison.data.shapes) +
col.sample.bu3 +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
comparison.data.sa$Site <- factor(comparison.data.sa$Site, levels = unique(comparison.data$Site))
ggplot(quantity.rand.sa,
aes(x = age_mo_round, y = prop_sa.tds,
group = SpkrAge, fill = SpkrAge, color = SpkrAge)) +
geom_boxplot(aes(group = interaction(age_mo_round, SpkrAge),
fill = SpkrAge, color = SpkrAge),
position = position_dodge(1), alpha = 0.3) +
geom_smooth(method = "lm") +
ylab("Prop of TCDS") + xlab("Child age (mo)")	+
scale_y_continuous(limits=c(-.2,1.2),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
geom_point(data = comparison.data.sa,
aes(x = AgeMonths, y = prp_spkr, group = SpkrAge,
fill = SpkrAge, shape = Site)) +
scale_shape_manual(values=comparison.data.shapes) +
col.sample.bu3 +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
RStudio.Version()
RStudio.Version()$version
RStudio.Version()$version[1]
shiny::runApp('Documents/Academic/Git-Projects/Tseltal-CLE')
library(tidyverse)
library(gtools)
all.models <- read_csv("shiny_input/all_model_tables.csv")
model.res.fig <- subset(all.models, )
all.models <- read_csv("shiny_input/all_model_tables.csv")
setwd("~/Documents/Academic/Git-Projects/Tseltal-CLE")
all.models <- read_csv("shiny_input/all_model_tables.csv")
table(all.models$model)
model.output.tbl <- filter(all.models, model == "TCDS_turntaking_nb")
model.output.tbl
model.res.fig <- "shiny_input/TCDS_turntaking_nb.res.plot.png"
all.sum.stats <- read_csv("shiny_input/quantity-scores_rand-and-tt.csv")
unique(all.sum.stats$Sample)
length(which(all.sum.stats$Sample == "Turn taking"))
View(all.sum.stats)
filter(all.sum.stats, Sample == "Turn taking") %>%
group_by(age_mo_round) %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.b <- filter(all.sum.stats, Sample == "Turn taking") %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.b
sum.stat.tbl.b <- filter(all.sum.stats, Sample == "Turn taking") %>%
summarise(age_mo_round = "All",
mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.b
sum.stat.tbl <- bind_rows(sum.stat.tbl.a, sum.stat.tbl.b)
sum.stat.tbl
sum.stat.tbl.a <- filter(all.sum.stats, Sample == "Turn taking") %>%
group_by(age_mo_round) %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.b <- filter(all.sum.stats, Sample == "Turn taking") %>%
summarise(age_mo_round = "All",
mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl <- bind_rows(sum.stat.tbl.a, sum.stat.tbl.b)
filter(all.sum.stats, Sample == "Turn taking") %>%
mutate(age_months = as.character(age_mo_round)) %>%
select(-age_mo_round) %>%
group_by(age_months) %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
paste0("0", as.character(all.sum.stats$age_mo_round))
substr(paste0("0", as.character(all.sum.stats$age_mo_round)), nchar(all.sum.stats$age_mo_round)-1, nchar(all.sum.stats$age_mo_round))
substr(paste0("0", as.character(all.sum.stats$age_mo_round)), nchar(all.sum.stats$age_mo_round), nchar(all.sum.stats$age_mo_round)+1)
read_csv("shiny_input/quantity-scores_rand-and-tt.csv")
sum.stat.tbl.a <- filter(all.sum.stats, Sample == "Turn taking") %>%
mutate(age_months = substr(paste0("0", as.character(age_mo_round)),
nchar(age_mo_round), nchar(age_mo_round)+1)) %>%
select(-age_mo_round) %>%
group_by(age_months) %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.a
sum.stat.tbl.a <- filter(all.sum.stats, Sample == "Turn taking") %>%
mutate(age_months = substr(paste0("0", as.character(age_mo_round)),
nchar(age_mo_round), nchar(age_mo_round)+1)) %>%
select(-age_mo_round) %>%
group_by(age_months) %>%
summarise(mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl.b <- filter(all.sum.stats, Sample == "Turn taking") %>%
summarise(age_months = "All",
mean = mean(tds_mph),
median = median(tds_mph),
min = min(tds_mph),
max = max(tds_mph),
n_clips = n())
sum.stat.tbl <- bind_rows(sum.stat.tbl.a, sum.stat.tbl.b)
sum.stat.tbl
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_bar() +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot() +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph, group)) +
geom_boxplot(aes(group = interaction) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph, group)) +
geom_boxplot(aes(group = interaction)) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_point(aes(group = age_mo_round)) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_jitter(aes(group = age_mo_round)) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round)) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr")
ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr")
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.height = unit(2, "lines"),
panel.spacing = unit(2, "lines"))
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.height = unit(2, "lines"),
panel.spacing = unit(2, "lines"))
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
#	panel.grid.major = element_blank(),
#	panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.height = unit(2, "lines"),
panel.spacing = unit(2, "lines"))
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "black"),
#	panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.height = unit(2, "lines"),
panel.spacing = unit(2, "lines"))
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "gray50"),
#	panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.height = unit(2, "lines"),
panel.spacing = unit(2, "lines"))
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "blue", outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), fill = "blue", alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "firebrick3", outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), color = "firebrick3", alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "firebrick3",
alpha = 0.4, outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), color = "firebrick3",
alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
sum.stat.fig <- ggplot(data=all.sum.stats,
aes(x = age_mo_round, y = tds_mph)) +
geom_boxplot(aes(group = age_mo_round), fill = "forestgreen",
alpha = 0.4, outlier.shape = NA) +
geom_jitter(aes(group = age_mo_round), color = "forestgreen",
alpha = 0.4) +
xlab("Age (months)") +
ylab("TCDS min/hr") +
basic.theme
sum.stat.fig
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
