scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,20),xlim=c(0,38)) +
scale_color_manual(values = c("black", "gray60")) +
scale_fill_manual(values = c("black", "gray60")) +
theme_apa() +
guides(size = FALSE, color = FALSE) +
theme(axis.line = element_line(color="black", size = 0.4))
tdsmph.comparison
tds.rand.zinb <- glmmTMB(round(tds_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1+I(stthr.std^2)|aclew_child_id),
data=quantity.rand,
ziformula=~tchiyr.std,#nsk.std,I(stthr.std^2)
family="nbinom1")
res = simulateResiduals(tds.rand.zinb)
plot(res, rank = T)
plot(res, rank = T)
summary(tds.rand.zinb)
tds.rand.zinb.COEF.time <-
coef(summary(tds.rand.zinb))[[1]]["I(stthr.std^2)",]
tds.rand.zinb.COEF.agetime <-
coef(summary(tds.rand.zinb))[[1]]["tchiyr.std:I(stthr.std^2)",]
tds.rand.zinb.COEF.ZI.age <-
coef(summary(tds.rand.zinb))[[2]]["tchiyr.std",]
tds.tt.nb <- glmmTMB(round(tds_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=quantity.nonrand.tt,
family="nbinom1")
res = simulateResiduals(tds.tt.nb)
plot(res, rank = T)
summary(tds.tt.nb)
summary(tds.tt.nb)
ods.rand.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=quantity.rand,
ziformula=~tchiyr.std+I(stthr.std^2),#nsk.std
family="nbinom1")
res = simulateResiduals(ods.rand.zinb)
plot(res, rank = T)
summary(ods.rand.zinb)
ods.rand.zinb.COEF.time <-
coef(summary(ods.rand.zinb))[[1]]["I(stthr.std^2)",]
ods.rand.zinb.COEF.nsk <-
coef(summary(ods.rand.zinb))[[1]]["nsk.std",]
ods.rand.zinb.COEF.agehsz <-
coef(summary(ods.rand.zinb))[[1]]["tchiyr.std:hsz.std",]
ods.tt.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=quantity.nonrand.tt,
ziformula=~tchiyr.std+nsk.std, #I(stthr.std^2)
family="nbinom1")
ods.tt.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=quantity.nonrand.tt,
ziformula=~tchiyr.std, #I(stthr.std^2)+nsk.std
family="nbinom1")
res = simulateResiduals(ods.tt.zinb)
plot(res, rank = T)
summary(ods.tt.zinb)
ods.tt.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=quantity.nonrand.tt,
ziformula=~nsk.std, #I(stthr.std^2)+tchiyr.std
family="nbinom1")
res = simulateResiduals(ods.tt.zinb)
plot(res, rank = T)
summary(ods.tt.zinb)
ods.tt.zinb.COEF.age <-
coef(summary(ods.tt.zinb))[[1]]["tchiyr.std",]
ods.tt.zinb.COEF.nsk <-
coef(summary(ods.tt.zinb))[[1]]["nsk.std",]
c_o.tpm.rand.zinb <- glmmTMB(round(n.c_o.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.rand,
ziformula=~tchiyr.std+I(stthr.std^2)+nsk.std,
family="nbinom1")
c_o.tpm.rand.zinb <- glmmTMB(round(n.c_o.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.rand,
ziformula=~tchiyr.std+I(stthr.std^2)+nsk.std,
family="nbinom1")
c_o.tpm.rand.zinb <- glmmTMB(round(n.c_o.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.rand,
ziformula=~tchiyr.std+I(stthr.std^2)+nsk.std,
family="nbinom1")
res = simulateResiduals(c_o.tpm.rand.zinb)
res = simulateResiduals(c_o.tpm.rand.zinb)
plot(res, rank = T)
summary(c_o.tpm.rand.zinb)
c_o.tpm.rand.zinb.COEF.agetime <-
coef(summary(c_o.tpm.rand.zinb))[[1]]["tchiyr.std:I(stthr.std^2)",]
c_o.tpm.rand.zinb.COEF.agensk <-
coef(summary(c_o.tpm.rand.zinb))[[1]]["tchiyr.std:nsk.std",]
c_o.tpm.rand.zinb.COEF.ZItime <-
coef(summary(c_o.tpm.rand.zinb))[[2]]["I(stthr.std^2)",]
c_o.tpm.rand.zinb.COEF.ZInsk <-
coef(summary(c_o.tpm.rand.zinb))[[2]]["nsk.std",]
c_o.tpm.tt.nb <- glmmTMB(round(n.c_o.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.tt,
family="nbinom1")
res = simulateResiduals(c_o.tpm.tt.nb)
plot(res, rank = T)
summary(c_o.tpm.tt.nb)
o_c.tpm.rand.zinb <- glmmTMB(round(n.o_c.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.rand,
ziformula=~tchiyr.std+I(stthr.std^2)+nsk.std,
family="nbinom1")
res = simulateResiduals(o_c.tpm.rand.zinb)
plot(res, rank = T)
summary(o_c.tpm.rand.zinb)
o_c.tpm.rand.zinb.COEF.agetime <-
coef(summary(o_c.tpm.rand.zinb))[[1]]["tchiyr.std:I(stthr.std^2)",]
o_c.tpm.tt.nb <- glmmTMB(round(n.o_c.tpm,0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.transitions.tt,
family="nbinom1")
res = simulateResiduals(o_c.tpm.tt.nb)
plot(res, rank = T)
summary(o_c.tpm.tt.nb)
o_c.tpm.tt.nb.COEF.nsk <-
coef(summary(o_c.tpm.tt.nb))[[1]]["nsk.std",]
turn.sequences.rand$uniq.segment <- paste0(turn.sequences.rand$aclew_child_id, "-",
turn.sequences.rand$segment)
seqdur.sec.rand.nb <- glmmTMB(round((seq.dur*60),0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|uniq.segment) +
(1|aclew_child_id), #I(stthr.std^2)
data=turn.sequences.rand,
family="nbinom1")
res = simulateResiduals(seqdur.sec.rand.nb)
plot(res, rank = T)
summary(seqdur.sec.rand.nb)
seqdur.sec.rand.nb.COEF.agehsz <-
coef(summary(seqdur.sec.rand.nb))[[1]]["tchiyr.std:hsz.std",]
turn.sequences.tt$uniq.segment <- paste0(turn.sequences.tt$aclew_child_id, "-",
turn.sequences.tt$segment)
seqdur.sec.tt.nb <- glmmTMB(round((seq.dur*60),0) ~
tchiyr.std +
I(stthr.std^2) +
hsz.std +
nsk.std +
tchiyr.std:I(stthr.std^2) +
tchiyr.std:hsz.std +
tchiyr.std:nsk.std +
(1|uniq.segment) +
(1+I(stthr.std^2)|aclew_child_id),
data=turn.sequences.tt,
family="nbinom1")
res = simulateResiduals(seqdur.sec.tt.nb)
plot(res, rank=T)
summary(seqdur.sec.tt.nb)
seqdur.sec.tt.nb.COEF.age <-
coef(summary(seqdur.sec.tt.nb))[[1]]["tchiyr.std",]
seqdur.sec.tt.nb.COEF.time <-
coef(summary(seqdur.sec.tt.nb))[[1]]["I(stthr.std^2)",]
seqdur.sec.tt.nb.COEF.hsz <-
coef(summary(seqdur.sec.tt.nb))[[1]]["hsz.std",]
head(ptcp.info)
View(ptcp.info)
sample.demog <- ptcp.info %>%
select(homebank_child_id, )
sample.demog <- ptcp.info %>%
select(homebank_child_id, )
sample.demog <- ptcp.info %>%
select(homebank_child_id, age, child_sex, mother_age, mat_ed, father_age, fat_ed, household_size) %>%
rename("HomeBank ID" = homebank_child_id, "Age" = age, "Sex" = child_sex,
"Mother's age" = mother_age, "Mother's edu" = mat_ed,
"Father's age" = father_age, "Father's edu" = fat_ed,
"Ppl in household" = household_size)
sample.demog
sample.demog
install.packages("stargazer")
library(stargazer)
sample.demog <- ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = gsub([md], "", age),
hszrd = round(household_size + 1, 0)) %>%
select(homebank_child_id, age, child_sex, mat_age_rd, mat_ed, hszrd) %>%
#  select(homebank_child_id, age, child_sex, mat_age_rd, mat_ed, fat_age_rd, fat_ed, hszrd) %>%
rename("HB ID" = homebank_child_id, "Age" = age, "Sex" = child_sex,
"Mot's age" = mat_age_rd, "Mot's edu" = mat_ed,
#         "Fat's age" = father_age, "Fat's edu" = fat_ed,
"Ppl in house" = hszrd)
sample.demog <- ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = gsub([md], "", age),
hszrd = round(household_size + 1, 0))
ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = chartr("md", "", age),
hszrd = round(household_size + 1, 0))
ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = chartr("md", "''''", age),
hszrd = round(household_size + 1, 0))
View(ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = chartr("md", "''''", age),
hszrd = round(household_size + 1, 0)))
ptcp.info$age[1]
gsub([[:alpha:]], "", ptcp.info$age[1])
gsub("[[:alpha:]]", "", ptcp.info$age[1])
sample.demog <- ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = gsub("[[:alpha:]]", "", age),
hszrd = round(household_size + 1, 0)) %>%
select(homebank_child_id, age, child_sex, mat_age_rd, mat_ed, hszrd) %>%
#  select(homebank_child_id, age, child_sex, mat_age_rd, mat_ed, fat_age_rd, fat_ed, hszrd) %>%
rename("HB ID" = homebank_child_id, "Age" = age, "Sex" = child_sex,
"Mot's age" = mat_age_rd, "Mot's edu" = mat_ed,
#         "Fat's age" = father_age, "Fat's edu" = fat_ed,
"Ppl in house" = hszrd)
sample.demog
sample.demog <- ptcp.info %>%
mutate(mat_age_rd = round(mother_age, 0), fat_age_rd = round(father_age, 0),
agev2 = gsub("[[:alpha:]]", "", age),
hszrd = round(household_size + 1, 0)) %>%
select(homebank_child_id, agev2, child_sex, mat_age_rd, mat_ed, hszrd) %>%
#  select(homebank_child_id, agev2, child_sex, mat_age_rd, mat_ed, fat_age_rd, fat_ed, hszrd) %>%
rename("HB ID" = homebank_child_id, "Age" = agev2, "Sex" = child_sex,
"Mot's age" = mat_age_rd, "Mot's edu" = mat_ed,
#         "Fat's age" = father_age, "Fat's edu" = fat_ed,
"Ppl in house" = hszrd)
sample.demog
View(chi.vm.lx.voc.type.props)
View(subset(chi.vm.lx.voc.type.props, voc.type == 4))
subset(chi.vm.lx.voc.type.props, voc.type == 4)
chi.vm.lx.voc.type.props
View(subset(chi.vm.lx.voc.type.props, max_voc.rtg == 4))
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.voc.type.props %>%
mutate(voctype.bin = ifelse(max_voc.rtg > 1, 1, 0)) %>%
group_by(aclew_child_id, voctype.bin) %>%
summarise(n_voc.type.bin = sum(n_voc.type)) %>%
full_join(chi.nvocs, by = "aclew_child_id") %>%
mutate(prop_voc.typebin = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, voctype.bin) %>%
full_join(ptcp.info, by = "aclew_child_id")
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.voc.type.props %>%
mutate(voctype.bin = ifelse(max_voc.rtg > 1, 1, 0)) %>%
group_by(aclew_child_id, voctype.bin) %>%
summarise(n_voc.type.bin = sum(n_voc.type)) %>%
full_join(chi.nvocs, by = "aclew_child_id") %>%
mutate(prop_voc.typebin = round(n_voc.type.bin/n_vocs, 3)) %>%
arrange(aclew_child_id, voctype.bin) %>%
full_join(ptcp.info, by = "aclew_child_id")
View(chi.vm.lx.voc.type.props.bin)
View(chi.vm.lx.voc.type.props)
View(subset(chi.vm.lx.voc.type.props.bin, voctype.bin == 1))
chi.nvocs
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI")) %>%
mutate(voc.rating = ifelse(val == "M", 4,
ifelse((val == "1" | val == "W"), 3,
ifelse((val == "0" | val == "C"), 2,
ifelse(val == "N", 1, 0))))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 5),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)), rep(2, length(ptcp.info$aclew_child_id)),
rep(3, length(ptcp.info$aclew_child_id)), rep(4, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
sum(chi.nvocs.all$n_vocs)
sum(chi.nvocs$n_vocs)
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI")) %>%
mutate(voc.rating = ifelse(val == "M", 4,
ifelse((val == "1" | val == "W"), 3,
ifelse((val == "0" | val == "C"), 2,
ifelse(val == "N", 1, 0))))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 5),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)), rep(2, length(ptcp.info$aclew_child_id)),
rep(3, length(ptcp.info$aclew_child_id)), rep(4, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
View(chi.vm.lx.voc.type.props.bin)
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI")) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 5),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
sum(chi.nvocs.all$n_vocs)
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
test  <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI")) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0))))
View(test)
sum(is.na(test$voc.rating))
View(testwhich[is.na(test$voc.rating)])
View(test[which(is.na(test$voc.rating))])
View(test[which(is.na(test$voc.rating)),])
unique(test$val)
subset(test, start == 6541873 & aclew_child_id == "7326")
hi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val)) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val)) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
View(chi.vm.lx.voc.type.props.bin)
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val) & age_mo_round < 19) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
left_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
left_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
left_join(ptcp.info, by = "aclew_child_id")
View(chi.vm.lx.voc.type.props.bin)
View(subset(chi.vm.lx.voc.type.props.bin, max_voc.rtg == 1))
round(subset(chi.vm.lx.voc.type.props.bin, voctype.bin == 1 & age_mo_round > 10)$prop_voc.typebin*100,2)
round(subset(chi.vm.lx.voc.type.props.bin, max_voc.rtg == 1 & age_mo_round > 10)$prop_voc.typebin*100,2)
round(subset(chi.vm.lx.voc.type.props.bin, max_voc.rtg == 1 & age_mo_round > 10)$prop_voc.type*100,2)
round(mean(subset(chi.vm.lx.voc.type.props.bin, max_voc.rtg == 1 & age_mo_round > 10)$prop_voc.type*100,2))
round(mean(subset(chi.vm.lx.voc.type.props.bin, max_voc.rtg == 1 & age_mo_round < 6)$prop_voc.type*100,2))
asd
RStudio.Version()$version
