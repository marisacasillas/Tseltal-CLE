# Random effects:
#
# Conditional model:
#  Groups         Name        Variance Std.Dev.
#  aclew_child_id (Intercept) 0.04876  0.2208
#  Residual                   0.50110  0.7079
# Number of obs: 59, groups:  aclew_child_id, 10
#
# Dispersion estimate for gaussian family (sigma^2): 0.501
#
# Conditional model:
#                               Estimate Std. Error z value  Pr(>|z|)
# (Intercept)                    2.40519    0.25565   9.408 <0.001 ***
# tchiyr.std                     0.08664    0.23371   0.371  0.711
# stthr.trimorning               0.12696    0.33565   0.378  0.705
# stthr.triafternoon             0.05228    0.30508   0.171  0.864
# hsz.std                        0.13424    0.15072   0.891  0.373
# nsk.std                       -0.13719    0.11791  -1.164  0.245
# tchiyr.std:stthr.trimorning   -0.16565    0.31907  -0.519  0.604
# tchiyr.std:stthr.triafternoon  0.04031    0.27258   0.148  0.882
# tchiyr.std:nsk.std             0.07303    0.14829   0.492  0.622
# DIFFERENCES between z-i nb and logged gaussian?
# broadly similar
# test the other two-way effects of time of day
tds.tt.gaus.v2 <- glmmTMB(log(tds_mph+1) ~
tchiyr.std +
stthr.tri.a +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.a +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.nonrand.tt)
#summary(tds.tt.gaus.v2)
# stthr.tri.amorning             0.07467    0.25899   0.288   0.773
# tchiyr.std:stthr.tri.amorning -0.20595    0.29278  -0.703   0.482
# DIFFERENCES between z-i nb and logged gaussian?
# broadly similar
# Write model results out for input to shiny
TCDS.models <- bind_rows(
broom.mixed::tidy(tds.rand.zinb) %>%
mutate(model = "TCDS_random_z-inb"),
broom.mixed::tidy(tds.rand.zinb.v2) %>%
mutate(model = "TCDS_random_z-inb.v2"),
broom.mixed::tidy(tds.rand.gaus) %>%
mutate(model = "TCDS_random_log_gaus"),
broom.mixed::tidy(tds.rand.gaus.v2) %>%
mutate(model = "TCDS_random_log_gaus.v2"),
broom.mixed::tidy(tds.tt.nb) %>%
mutate(model = "TCDS_turntaking_nb"),
broom.mixed::tidy(tds.tt.nb.v2) %>%
mutate(model = "TCDS_turntaking_nb.v2"),
broom.mixed::tidy(tds.tt.gaus) %>%
mutate(model = "TCDS_turntaking_log_gaus"),
broom.mixed::tidy(tds.tt.gaus.v2) %>%
mutate(model = "TCDS_turntaking_log_gaus.v2"))
grid.arrange(tod.tcds.rand, tod.ods.rand,
tod.tcds.tt, tod.ods.tt, nrow=2, ncol=2)
# Aggregate to one point per child and then test a correlation with age
# random
propchitcds.rand <- subset(quantity.rand.sa[
which(!is.na(quantity.rand.sa$prop_sa.tds)),],
SpkrAge == "Child")
propchitcds.rand.corr_age <- propchitcds.rand %>%
group_by(aclew_child_id, tchiyr.std, age_mo_round) %>%
summarise(avg_prpchitcds = mean(prop_sa.tds))
propchitcds.rand.corr_age.test <- cor.test(
~ age_mo_round + avg_prpchitcds,
data = propchitcds.rand.corr_age, method = "spearman")
# turn taking
propchitcds.tt <- subset(quantity.nonrand.tt.sa[
which(!is.na(quantity.nonrand.tt.sa$prop_sa.tds)),],
SpkrAge == "Child")
propchitcds.tt.corr_age <- propchitcds.tt %>%
group_by(aclew_child_id, tchiyr.std, age_mo_round) %>%
summarise(avg_prpchitcds = mean(prop_sa.tds))
propchitcds.tt.corr_age.test <- cor.test(
~ age_mo_round + avg_prpchitcds,
data = propchitcds.tt.corr_age, method = "spearman")
tds.per.seg.rand.age.sx <- all.data %>%
filter(sample == "random" & speaker != "CHI" & SpkrAge != "Not known" &
grepl("xds@", tier) & val == "T") %>%
group_by(aclew_child_id, SpkrAge, SpkrSex, segment, segment_dur) %>%
summarise(tds_min.age.sx = round(sum(dur)/60000,3)) %>%
full_join(all.rand.segments.age.sx, by = c("aclew_child_id", "segment", "SpkrAge", "SpkrSex")) %>%
replace_na(list(segment_dur = 5, tds_min.age.sx = 0)) %>%
mutate(tds_mph.age.sx = (tds_min.age.sx/segment_dur)*60) %>%
arrange(aclew_child_id, segment, SpkrAge, SpkrSex) %>%
group_by(aclew_child_id, SpkrAge, SpkrSex) %>%
summarize(m_tds_mph.age.sx = mean(tds_mph.age.sx))
tds.per.seg.rand.age.sx.FA <- filter(tds.per.seg.rand.age.sx,
SpkrAge == "Adult" & SpkrSex == "Female") %>%
rename(m_tds_mph.age.sx.FA = m_tds_mph.age.sx)
tds.per.seg.rand.age.sx.MA <- filter(tds.per.seg.rand.age.sx,
SpkrAge == "Adult" & SpkrSex == "Male") %>%
rename(m_tds_mph.age.sx.MA = m_tds_mph.age.sx)
adu.sx.ratio <- full_join(tds.per.seg.rand.age.sx.FA, tds.per.seg.rand.age.sx.MA,
by = "aclew_child_id") %>%
mutate(ratioFAMA = m_tds_mph.age.sx.FA/m_tds_mph.age.sx.MA) %>%
dplyr::select(aclew_child_id, ratioFAMA)
## ODS random sample ####
ods.random.distribution <- ggplot(quantity.rand,
aes(round(ods_mph,0))) +
geom_histogram(binwidth = 2) +
ylab("# of clips") +
xlab ("ODS min/hr") +
basic.theme
ggsave(paste0(shiny.input.img.path, "ODS_random_distribution.png"),
plot = ods.random.distribution,
width = 8, height = 6, dpi = 300)
#sd(round(quantity.rand$ods_mph,0))^2
#mean(round(quantity.rand$ods_mph,0))
# mean is much smaller than variance
ods.rand.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
stthr.tri +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.rand,
ziformula=~nsk.std,
family="nbinom1")
#ods.rand.zinb.res = simulateResiduals(ods.rand.zinb)
#plot(ods.rand.zinb.res, rank = T) # (manually saved)
#summary(ods.rand.zinb)
# Data: quantity.rand
#
#      AIC      BIC   logLik deviance df.resid
#    542.9    575.4   -258.4    516.9       77
#
# Random effects:
#
# Conditional model:
#  Groups         Name        Variance                      Std.Dev.
#  aclew_child_id (Intercept) 0.000000000000000000000003448 0.000000000001857
# Number of obs: 90, groups:  aclew_child_id, 10
#
# Overdispersion parameter for nbinom1 family ():  6.5
#
# Conditional model:
#                               Estimate Std. Error z value   Pr(>|z|)
# (Intercept)                    2.70946    0.16060  16.871 < 0.0001 ***
# tchiyr.std                    -0.38657    0.15935  -2.426   0.0153 *
# stthr.trimorning               0.44961    0.18051   2.491   0.0127 *
# stthr.triafternoon             0.32721    0.16402   1.995   0.0461 *
# hsz.std                       -0.12098    0.07965  -1.519   0.1288
# nsk.std                        0.68245    0.09360   7.291   0.0001 ***
# tchiyr.std:stthr.trimorning    0.26334    0.20038   1.314   0.1888
# tchiyr.std:stthr.triafternoon  0.42014    0.17366   2.419   0.0155 *
# tchiyr.std:nsk.std             0.14446    0.11210   1.289   0.1975
# -
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Zero-inflation model:
#             Estimate Std. Error z value Pr(>|z|)
# (Intercept)   -51.51   13502.22  -0.004    0.997
# nsk.std       -55.02   13734.07  -0.004    0.997
# save for reporting
ods.rand.zinb.disp <- round(sigma(ods.rand.zinb), 2)
ods.rand.zinb.COEF.age <-
coef(summary(ods.rand.zinb))[[1]]["tchiyr.std",]
ods.rand.zinb.COEF.midd.morn <-
coef(summary(ods.rand.zinb))[[1]]["stthr.trimorning",]
ods.rand.zinb.COEF.midd.aft <-
coef(summary(ods.rand.zinb))[[1]]["stthr.triafternoon",]
ods.rand.zinb.COEF.nsk <-
coef(summary(ods.rand.zinb))[[1]]["nsk.std",]
ods.rand.zinb.COEF.age.midd.morn <-
coef(summary(ods.rand.zinb))[[1]]["tchiyr.std:stthr.trimorning",]
ods.rand.zinb.COEF.age.midd.aft <-
coef(summary(ods.rand.zinb))[[1]]["tchiyr.std:stthr.triafternoon",]
# test the other two-way effects of time of day
# !! singular convergence !!
# likely due to insufficient data for the afternoon vs. morning contrast
ods.rand.zinb.v2 <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
stthr.tri.a +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.a +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.rand,
ziformula=~nsk.std,
family="nbinom1")
#ods.rand.zinb.v2.res = simulateResiduals(ods.rand.zinb.v2)
#plot(ods.rand.zinb.v2.res, rank = T) # (manually saved)
# residuals look okay and the other estimates look similar
# to those from the converging model above, so I will go with these
# results for now (hopefully more data in the future will help here)
# save for reporting
#summary(ods.rand.zinb.v2)
# stthr.tri.amorning             0.12240    0.14739   0.830               0.4063
# tchiyr.std:stthr.tri.amorning -0.15681    0.16012  -0.979               0.3274
ods.rand.zinb.v2.COEF.aft.morn <-
coef(summary(ods.rand.zinb.v2))[[1]]["stthr.tri.amorning",]
ods.rand.zinb.v2.COEF.age.aft.morn <-
coef(summary(ods.rand.zinb.v2))[[1]]["tchiyr.std:stthr.tri.amorning",]
## ODS tt sample ####
ods.tt.distribution <- ggplot(quantity.nonrand.tt,
aes(round(ods_mph,0))) +
geom_histogram(binwidth = 2) +
ylab("# of clips") +
xlab ("ODS min/hr") +
basic.theme
ggsave(paste0(shiny.input.img.path, "ODS_turntaking_distribution.png"),
plot = ods.tt.distribution,
width = 8, height = 6, dpi = 300)
#sd(round(quantity.nonrand.tt$ods_mph,0))^2
#mean(round(quantity.nonrand.tt$ods_mph,0))
# mean is much smaller than variance
# still zero-inflated
# !! non-convergence w/ standard stthr.tri predictor, so
# used the alternative stthr.tri.o to get both two-way
# time-of-day comparisons
ods.tt.zinb <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
stthr.tri.o +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.o +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.nonrand.tt,
ziformula=~nsk.std,
family="nbinom1")
#ods.tt.zinb.res = simulateResiduals(ods.tt.zinb)
#plot(ods.tt.zinb.res, rank = T) # (manually saved)
#summary(ods.tt.zinb)
# Data: quantity.nonrand.tt
#
#      AIC      BIC   logLik deviance df.resid
#    365.7    392.7   -169.8    339.7       46
#
# Random effects:
#
# Conditional model:
#  Groups         Name        Variance                     Std.Dev.
#  aclew_child_id (Intercept) 0.00000000000000000000004144 0.000000000006437
# Number of obs: 59, groups:  aclew_child_id, 10
#
# Overdispersion parameter for nbinom1 family (): 4.22
#
# Conditional model:
#                                  Estimate Std. Error z value   Pr(>|z|)
# (Intercept)                      2.642703   0.164931  16.023 < 0.000001 ***
# tchiyr.std                      -0.803159   0.234119  -3.431   0.000602 ***
# stthr.tri.oafternoon            -0.608341   0.251958  -2.414   0.015759 *
# stthr.tri.omidday               -0.002503   0.263993  -0.009   0.992434
# hsz.std                         -0.184692   0.087090  -2.121   0.033948 *
# nsk.std                          0.627375   0.097367   6.443   0.000001 ***
# tchiyr.std:stthr.tri.oafternoon  0.475480   0.294358   1.615   0.106243
# tchiyr.std:stthr.tri.omidday     0.536286   0.302352   1.774   0.076111 .
# tchiyr.std:nsk.std              -0.012219   0.134777  -0.091   0.927763
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Zero-inflation model:
#             Estimate Std. Error z value Pr(>|z|)
# (Intercept)   -31.97   11304.01  -0.003    0.998
# nsk.std       -31.33   11122.86  -0.003    0.998
# save for reporting
ods.tt.zinb.disp <- round(sigma(ods.tt.zinb), 2)
ods.tt.zinb.COEF.age <-
coef(summary(ods.tt.zinb))[[1]]["tchiyr.std",]
ods.tt.zinb.COEF.morn.aft <-
coef(summary(ods.tt.zinb))[[1]]["stthr.tri.oafternoon",]
ods.tt.zinb.COEF.morn.midd <-
coef(summary(ods.tt.zinb))[[1]]["stthr.tri.omidday",]
ods.tt.zinb.COEF.hsz <-
coef(summary(ods.tt.zinb))[[1]]["hsz.std",]
ods.tt.zinb.COEF.nsk <-
coef(summary(ods.tt.zinb))[[1]]["nsk.std",]
ods.tt.zinb.COEF.age.morn.aft <-
coef(summary(ods.tt.zinb))[[1]]["tchiyr.std:stthr.tri.oafternoon",]
ods.tt.zinb.COEF.age.morn.midd <-
coef(summary(ods.tt.zinb))[[1]]["tchiyr.std:stthr.tri.omidday",]
# test the other two-way effects of time of day
ods.tt.zinb.v2 <- glmmTMB(round(ods_mph,0) ~
tchiyr.std +
stthr.tri.a +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.a +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.nonrand.tt,
ziformula=~nsk.std,
family="nbinom1")
#summary(ods.tt.zinb.v2)
# save for reporting
# stthr.tri.amidday              0.60584    0.29290   2.068   0.0386 *
# tchiyr.std:stthr.tri.amidday   0.06081    0.31055   0.196   0.8448
ods.tt.zinb.v2.COEF.aft.midd <-
coef(summary(ods.tt.zinb.v2))[[1]]["stthr.tri.amidday",]
ods.tt.zinb.v2.COEF.age.aft.midd <-
coef(summary(ods.tt.zinb.v2))[[1]]["tchiyr.std:stthr.tri.amidday",]
## ODS random sample ####
ods.rand.gaus <- glmmTMB(log(ods_mph+1) ~
tchiyr.std +
stthr.tri +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.rand)
#ods.rand.gaus.res = simulateResiduals(ods.rand.gaus)
#plot(ods.rand.gaus.res, rank = T) # (manually saved)
#summary(ods.rand.gaus)
# Data: quantity.rand
#
#      AIC      BIC   logLik deviance df.resid
#    220.6    248.1    -99.3    198.6       79
#
# Random effects:
#
# Conditional model:
#  Groups         Name        Variance        Std.Dev.
#  aclew_child_id (Intercept) 0.0000000008073 0.00002841
#  Residual                   0.5317946982101 0.72924255
# Number of obs: 90, groups:  aclew_child_id, 10
#
# Dispersion estimate for gaussian family (sigma^2): 0.532
#
# Conditional model:
#                               Estimate Std. Error z value   Pr(>|z|)
# (Intercept)                    2.04376    0.15287  13.369 < 0.000001 ***
# tchiyr.std                    -0.26450    0.17715  -1.493   0.135415
# stthr.trimorning               0.23286    0.21438   1.086   0.277397
# stthr.triafternoon             0.35269    0.18999   1.856   0.063407 .
# hsz.std                       -0.37882    0.11236  -3.371   0.000748 ***
# nsk.std                        1.55757    0.09555  16.302 < 0.000001 ***
# tchiyr.std:stthr.trimorning    0.07095    0.22658   0.313   0.754176
# tchiyr.std:stthr.triafternoon  0.42755    0.20507   2.085   0.037084 *
# tchiyr.std:nsk.std             0.17956    0.11344   1.583   0.113435
# DIFFERENCES between z-i nb and logged gaussian?
# some non-sig <-> sig (age, morn-vs-midd, hsz), but all going in the same direction
# test the other two-way effects of time of day
ods.rand.gaus.v2 <- glmmTMB(log(ods_mph+1) ~
tchiyr.std +
stthr.tri.a +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.a +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.rand)
#summary(ods.rand.gaus.v2)
# stthr.tri.amorning            -0.11983    0.18738  -0.640   0.522494
# tchiyr.std:stthr.tri.amorning -0.35659    0.19600  -1.819   0.068861 .
# save for reporting
# DIFFERENCES between z-i nb and logged gaussian?
# broadly similar
## ODS tt sample ####
ods.tt.gaus <- glmmTMB(log(ods_mph+1) ~
tchiyr.std +
stthr.tri +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.nonrand.tt)
#ods.tt.gaus.res = simulateResiduals(ods.tt.gaus)
#plot(ods.tt.gaus.res, rank = T) # (manually saved)
#summary(ods.tt.gaus)
# Random effects:
#
# Conditional model:
#  Groups         Name        Variance        Std.Dev.
#  aclew_child_id (Intercept) 0.0000000001595 0.00001263
#  Residual                   0.4803202867131 0.69305143
# Number of obs: 59, groups:  aclew_child_id, 10
#
# Dispersion estimate for gaussian family (sigma^2): 0.48
#
# Conditional model:
#                               Estimate Std. Error z value   Pr(>|z|)
# (Intercept)                    2.34259    0.21441  10.926 < 0.00001 ***
# tchiyr.std                    -0.14993    0.20131  -0.745   0.45642
# stthr.trimorning              -0.24611    0.28518  -0.863   0.38813
# stthr.triafternoon            -0.71950    0.25935  -2.774   0.00553 **
# hsz.std                       -0.26907    0.11809  -2.278   0.02270 *
# nsk.std                        1.09149    0.10899  10.015 < 0.00001 ***
# tchiyr.std:stthr.trimorning   -0.24622    0.28606  -0.861   0.38940
# tchiyr.std:stthr.triafternoon  0.05821    0.25601   0.227   0.82013
# tchiyr.std:nsk.std            -0.08266    0.13667  -0.605   0.54531
# DIFFERENCES between z-i nb and logged gaussian?
# some non-sig <-> sig (age), but all going in the same direction
# test the other two-way effects of time of day
ods.tt.gaus.v2 <- glmmTMB(log(ods_mph+1) ~
tchiyr.std +
stthr.tri.a +
hsz.std +
nsk.std +
tchiyr.std:stthr.tri.a +
tchiyr.std:nsk.std +
(1|aclew_child_id),
data=quantity.nonrand.tt)
#summary(ods.tt.gaus.v2)
# stthr.tri.amorning             0.47338    0.24385   1.941              0.05222 .
# tchiyr.std:stthr.tri.amorning -0.30443    0.26895  -1.132              0.25767
# save for reporting
# DIFFERENCES between z-i nb and logged gaussian?
# broadly similar
# Write model results out for input to shiny
ODS.models <- bind_rows(
broom.mixed::tidy(ods.rand.zinb) %>%
mutate(model = "ODS_random_z-inb"),
broom.mixed::tidy(ods.rand.zinb.v2) %>%
mutate(model = "ODS_random_z-inb.v2"),
broom.mixed::tidy(ods.rand.gaus) %>%
mutate(model = "ODS_random_log_gaus"),
broom.mixed::tidy(ods.rand.gaus.v2) %>%
mutate(model = "ODS_random_log_gaus.v2"),
broom.mixed::tidy(ods.tt.zinb) %>%
mutate(model = "ODS_turntaking_z-inb"),
broom.mixed::tidy(ods.tt.zinb.v2) %>%
mutate(model = "ODS_turntaking_z-inb.v2"),
broom.mixed::tidy(ods.tt.gaus) %>%
mutate(model = "ODS_turntaking_log_gaus"),
broom.mixed::tidy(ods.tt.gaus.v2) %>%
mutate(model = "ODS_turntaking_log_gaus.v2"))
all.models <- bind_rows(TCDS.models, ODS.models)
write_csv(all.models, paste0(shiny.input.path, "all_model_tables.csv"))
# all vocalization types
chi.vm.lx.utts <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") & !is.na(val)) %>%
mutate(voc.rating = ifelse(val == "M", 4,
ifelse((val == "1" | val == "W"), 3,
ifelse((val == "0" | val == "C"), 2,
ifelse(val == "N", 1, 0))))) %>%
filter(voc.rating > 0) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 4),
max_voc.rtg = c(rep(1, length(ptcp.info$aclew_child_id)),
rep(2, length(ptcp.info$aclew_child_id)),
rep(3, length(ptcp.info$aclew_child_id)),
rep(4, length(ptcp.info$aclew_child_id)))
)
chi.nvocs <- chi.vm.lx.utts %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props <- chi.vm.lx.utts %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
# speech-like vs. non-speech-like only, only under 19mo
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") &
!is.na(val) & age_mo_round < 19) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
left_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
left_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
left_join(ptcp.info, by = "aclew_child_id")
chi.vm.lx.voc.type.props <- chi.vm.lx.voc.type.props %>%
mutate(voc.type = factor(as.factor(max_voc.rtg),
labels = c("NCB", "CB", "SW", "MW")))
write_csv(chi.vm.lx.voc.type.props,
paste0(shiny.input.path,
"all_vocmat-types_proportions.csv"))
voc.mat.by.age <- ggplot(
data = chi.vm.lx.voc.type.props,
aes(x = age_mo_round, y = prop_voc.type, group = as.factor(voc.type))) +
geom_point(aes(color = as.factor(voc.type))) +
geom_smooth(aes(color = as.factor(voc.type),
fill = as.factor(voc.type)), method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
labs(fill='Voc type') +
labs(color='Voc type') +
scale_color_manual(values = c("gray80", "gray54",
"gray27", "black")) +
scale_fill_manual(values = c("gray80", "gray54",
"gray27", "black")) +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() + theme(
legend.position = c(0.9, 0.85),
legend.background = element_rect(fill="transparent"),
axis.line = element_line(color="black", size = 0.4))
#voc.mat.by.age
