mutate(voc.rating = ifelse(val == "M", 4,
ifelse((val == "1" | val == "W"), 3,
ifelse((val == "0" | val == "C"), 2,
ifelse(val == "N", 1, 0))))) %>%
filter(voc.rating > 0) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 4),
max_voc.rtg = c(rep(1, length(ptcp.info$aclew_child_id)),
rep(2, length(ptcp.info$aclew_child_id)),
rep(3, length(ptcp.info$aclew_child_id)),
rep(4, length(ptcp.info$aclew_child_id)))
)
chi.nvocs <- chi.vm.lx.utts %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props <- chi.vm.lx.utts %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
full_join(all.voc.types.per.child, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
full_join(chi.nvocs, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
full_join(ptcp.info, by = "aclew_child_id")
# speech-like vs. non-speech-like only, only under 19mo
chi.vm.lx.utts.all <- all.data %>%
filter((tier == "vcm@CHI" | tier == "lex@CHI" | tier == "mwu@CHI") &
!is.na(val) & age_mo_round < 19) %>%
mutate(voc.rating = ifelse(val == "M", 1,
ifelse((val == "1" | val == "W"), 1,
ifelse((val == "0" | val == "C"), 1, 0)))) %>%
group_by(aclew_child_id, segment, sample, start) %>%
summarise(max_voc.rtg = max(voc.rating))
all.voc.types.per.child.all <- tibble(
aclew_child_id = rep(ptcp.info$aclew_child_id, 2),
max_voc.rtg = c(rep(0, length(ptcp.info$aclew_child_id)),
rep(1, length(ptcp.info$aclew_child_id)))
)
chi.nvocs.all <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id) %>%
summarise(n_vocs = n())
chi.vm.lx.voc.type.props.bin <- chi.vm.lx.utts.all %>%
group_by(aclew_child_id, max_voc.rtg) %>%
summarise(n_voc.type = n()) %>%
left_join(all.voc.types.per.child.all, by = c("aclew_child_id", "max_voc.rtg")) %>%
replace_na(list(n_voc.type = 0)) %>%
left_join(chi.nvocs.all, by = "aclew_child_id") %>%
mutate(prop_voc.type = round(n_voc.type/n_vocs, 3)) %>%
arrange(aclew_child_id, max_voc.rtg) %>%
left_join(ptcp.info, by = "aclew_child_id")
chi.vm.lx.voc.type.props <- chi.vm.lx.voc.type.props %>%
mutate(voc.type = factor(as.factor(max_voc.rtg),
labels = c("NCB", "CB", "SW", "MW")))
write_csv(chi.vm.lx.voc.type.props,
paste0(shiny.input.path,
"all_vocmat-types_proportions.csv"))
voc.mat.by.age <- ggplot(
data = chi.vm.lx.voc.type.props,
aes(x = age_mo_round, y = prop_voc.type, group = as.factor(voc.type))) +
geom_point(aes(color = as.factor(voc.type))) +
geom_smooth(aes(color = as.factor(voc.type),
fill = as.factor(voc.type)), method = "loess") +
ylab("Prop of linguistic vocs") + xlab("Child age (mo)") +
labs(fill='Voc type') +
labs(color='Voc type') +
scale_color_manual(values = c("gray80", "gray54",
"gray27", "black")) +
scale_fill_manual(values = c("gray80", "gray54",
"gray27", "black")) +
scale_y_continuous(limits=c(-0.5,1.5),
breaks=seq(0,1,0.2)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,1), xlim=c(0,38)) +
theme_apa() + theme(
legend.position = c(0.9, 0.85),
legend.background = element_rect(fill="transparent"),
axis.line = element_line(color="black", size = 0.4))
voc.mat.by.age
all.models <- bind_rows(TCDS.models, ODS.models,
c_o.tpm.models, o_c.tpm.models,
seqdur.sec.models)
write_csv(all.models, paste0(shiny.input.path, "all_model_tables.csv"))
View(ttrGEpeaks.summary)
8/45
(8/45)*60
640/60
round(mean(ttrGEpeaks.summary$pkdur.mph),2)
round(mean(ttrGEpeaks.summary$pkdur.mph),2)*14
round(mean(ttrGEpeaks.summary$pkdur.mph),2)
round(median(ttrGEpeaks.summary$pkdur.mph),2)
round(min(ttrGEpeaks.summary$pkdur.mph),2)
round(max(ttrGEpeaks.summary$pkdur.mph),2)
mean(ttrGEpeaks.summary$pkdur.mph)*waking.hours
round((mean(ttrGEpeaks.summary$pkdur.mph)*waking.hours)/60,2)
round(mean(ttrGEpeaks.summary$pkdur.mph),2)
round(mean(quantity.rand.bychild$tds_mph),2)
tod.tcds.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
tod.tcds.rand
# individual TOD plots
tod.tcds.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Random TCDS min/hr") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
tod.ods.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("Time of day")	+
ggtitle("Random ODS min/hr") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
tod.tcds.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn taking ODS min/hr") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
tod.ods.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn-taking ODS min/hr") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4))
grid.arrange(tod.tcds.rand, tod.ods.rand,
tod.tcds.tt, tod.ods.tt, nrow=2, ncol=2)
# individual TOD plots
tod.tcds.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.ods.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("Time of day")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.tcds.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn taking") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.ods.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn taking") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
grid.arrange(tod.tcds.rand, tod.ods.rand,
tod.tcds.tt, tod.ods.tt, nrow=2, ncol=2)
tod.tcds.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + #xlab("Time of day")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.ods.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + #xlab("Time of day")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.tcds.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn taking") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.ods.tt <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Turn taking"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("Time of day")	+
ggtitle("Turn taking") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_fill_manual(guide = FALSE,
values = c("#21908CFF", "#21908CFF", "#FDE725FF")) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
grid.arrange(tod.tcds.rand, tod.ods.rand,
tod.tcds.tt, tod.ods.tt, nrow=2, ncol=2)
tod.tcds.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(tds_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("TCDS (min/hr)") + xlab("")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,40),
breaks=c(0,10,20, 30, 40)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,40)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
tod.ods.rand <- ggplot(
data = subset(quantity.rand_and_tt.all, Sample == "Random"), aes(
y = round(ods_mph, 0), x = stthr.tri.centered,
group = interaction(SplitAge, stthr.tri.centered),
color = Sample,
fill = Sample,
alpha = SplitAge)) +
geom_jitter() +
geom_boxplot(color = "black") +
ylab("ODS (min/hr)") + xlab("")	+
ggtitle("Random") +
labs(alpha = "Age") +
scale_y_continuous(limits=c(-10,80),
breaks=seq(0,80,20)) +
scale_color_manual(guide = FALSE, values = viridis(3)) +
scale_fill_manual(guide = FALSE, values = viridis(3)) +
scale_alpha_discrete(range = c(0.2, 0.8)) +
coord_cartesian(ylim=c(0,80)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
grid.arrange(tod.tcds.rand, tod.ods.rand,
tod.tcds.tt, tod.ods.tt, nrow=2, ncol=2)
chi.oth.tts.rand_and_tt <- ggplot(turn.transitions.rand_and_tt,
aes(x = age_mo_round, y = n.c_o.tpm, lty = sample)) +
geom_boxplot(aes(group = interaction(age_mo_round, sample),
color = sample), fill = "white", outlier.shape = NA,
lty = "solid", alpha = 0.4) +
geom_smooth(aes(fill = sample, color = sample), method = "lm") +
ylab("CHI-OTH tts/min") + xlab("")	+
ggtitle("TC--O transitions") +
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
# OTH-CHI transitions per minute
oth.chi.tts.rand_and_tt <- ggplot(turn.transitions.rand_and_tt,
aes(x = age_mo_round, y = n.o_c.tpm, lty = sample)) +
geom_boxplot(aes(group = interaction(age_mo_round, sample),
color = sample), fill = "white", outlier.shape = NA,
lty = "solid", alpha = 0.4) +
geom_smooth(aes(fill = sample, color = sample), method = "lm") +
ylab("OTH-CHI tts/min") + xlab("Child age (mo)")	+
ggtitle("O--TC transitions") +
scale_y_continuous(limits=c(0,30),
breaks=seq(0,30,5)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,30),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
# Graph the basic sequence duration info
# plot per-clip averages so it's consistent with the rest
turn.sequences.rand_and_tt.byclip <- turn.sequences.rand_and_tt %>%
group_by(aclew_child_id, age_mo_round, sample, segment) %>%
summarise(m.seqdur.sec = mean(seq.dur*60))
seq.dur.rand_and_tt <- ggplot(turn.sequences.rand_and_tt.byclip,
aes(x = age_mo_round, y = m.seqdur.sec, lty = sample)) +
geom_boxplot(aes(group = interaction(age_mo_round, sample),
color = sample), fill = "white", outlier.shape = NA,
lty = "solid", alpha = 0.4) +
geom_smooth(aes(fill = sample, color = sample), method = "lm") +
ylab("Seq. dur. (sec)") + xlab("")	+
ggtitle("Sequence duration") +
scale_y_continuous(limits=c(0,60),
breaks=seq(0,60,20)) +
scale_x_continuous(limits=c(0,38),
breaks=seq(0,38,6)) +
coord_cartesian(ylim=c(0,60),xlim=c(0,38)) +
scale_color_manual(values = viridis(3)) +
scale_fill_manual(values = viridis(3)) +
theme_apa() +
theme(legend.position="none",
axis.line = element_line(color="black", size = 0.4),
plot.title = element_text(hjust = 0.5))
grid.arrange(chi.oth.tts.rand_and_tt, oth.chi.tts.rand_and_tt,
seq.dur.rand_and_tt, nrow=1, ncol=3)
